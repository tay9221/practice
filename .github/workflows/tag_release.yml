name: Tag & Release on main

on:
  push:
    branches:
      - main
  workflow_dispatch: # 수동 실행

permissions:
  contents: write # ← 이거 추가

jobs:
  tag-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get package.json version
        id: pkg
        uses: jaywcjlove/github-action-package@main

      - name: Get latest tag
        id: latest_tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          semver_only: true

      - name: Compare versions
        id: compare
        uses: actions/github-script@v6
        with:
          script: |
            const newVer = '${{ steps.pkg.outputs.version }}';
            const oldVer = '${{ steps.latest_tag.outputs.tag || '0.0.0' }}';

            function toNums(v) {
              return v.replace(/^v/, '').split('.').map(Number);
            }

            const [nMaj, nMin, nPatch] = toNums(newVer);
            const [oMaj, oMin, oPatch] = toNums(oldVer);

            const isNewer =
              nMaj > oMaj ||
              (nMaj === oMaj && nMin > oMin) ||
              (nMaj === oMaj && nMin === oMin && nPatch > oPatch);

            if (!isNewer) {
              core.setFailed(`Version ${newVer} is not newer than ${oldVer}`);
            } else {
              core.setOutput('new_version', newVer);
            }

      - name: Generate changelog
        id: changelog
        run: |
          git fetch --tags

          if [ -z "${{ steps.latest_tag.outputs.tag }}" ]; then
            echo "No previous tag found. Getting all merged PRs."
            git log --merges --pretty=format:"- %s (%h)" > changes.txt
          else
            echo "Previous tag found: ${{ steps.latest_tag.outputs.tag }}"
            git log --merges --pretty=format:"- %s (%h)" ${{ steps.latest_tag.outputs.tag }}..HEAD > changes.txt
          fi

      - name: Create release
        uses: actions/create-release@v1
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.compare.outputs.new_version }}
          release_name: "Release ${{ steps.compare.outputs.new_version }}"
          body_path: changes.txt # ← 이거!
          draft: false
          prerelease: false
